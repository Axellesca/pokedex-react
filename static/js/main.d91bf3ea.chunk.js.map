{"version":3,"sources":["contexts/favoritesContext.js","components/NavBar.js","components/ArrowsSvg.js","components/Pagination.js","components/PokemonCard.js","components/Pokemons.js","helpers/api.js","components/SearchBar.js","PokeDex.js","index.js"],"names":["FavoriteContext","createContext","favoritePokemons","updateFavoritePokemons","id","NavBar","useContext","src","alt","className","length","LeftArrow","xmlns","viewBox","width","height","d","fill","stroke","strokeLinecap","strokeLinejoin","RightArrow","Pagination","onLeftClick","onRightClick","page","totalPages","onClick","PokemonCard","pokemon","heart","includes","name","sprites","front_default","types","map","type","index","e","preventDefault","Pokemons","pokemons","setPage","total","loading","nextPage","Math","max","min","buscarPokemon","a","url","fetch","respuesta","json","data","getPokemon","limit","offset","getPokemonData","SearchBar","onSearch","useState","search","setSearch","handleClick","placeholder","onChange","target","value","localStorageKey","PokeDex","setPokemons","setTotal","setLoading","favorites","setFavorites","notFound","setNotFound","searching","setSearching","fetchPokemons","promises","results","Promise","all","ceil","count","useEffect","JSON","parse","window","localStorage","getItem","loadFavoritePokemons","result","Provider","updated","isFavorite","indexOf","splice","push","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d91bf3ea.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const FavoriteContext = createContext({\r\n    favoritePokemons:[],\r\n    updateFavoritePokemons: (id) => null\r\n});","import React, { useContext } from 'react'\r\nimport { FavoriteContext } from '../contexts/favoritesContext';\r\n\r\nconst NavBar = () => {\r\n\r\n    const {favoritePokemons} = useContext(FavoriteContext);\r\n    // console.log(favoritePokemons);\r\n    return (\r\n        <nav>\r\n            <div>\r\n                <div>\r\n                    <img src=\"https://raw.githubusercontent.com/PokeAPI/media/master/logo/pokeapi_256.png\" alt=\"PokeApi-logo\"\r\n                    className=\"navbar-image\"/>\r\n                    \r\n                </div>\r\n                \r\n            </div>&#10084;&#65039; {favoritePokemons.length}\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import React from \"react\";\r\n\r\nexport const LeftArrow = () => {\r\n    return (\r\n        <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 21 21\"\r\n            width=\"28\"\r\n            height=\"28\"\r\n        >\r\n        <path\r\n            d=\"M11.5 14.5l-4-4 4-4\"\r\n            fill=\"none\"\r\n            stroke=\"#FFF\"\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n        />\r\n        </svg>\r\n    );\r\n};\r\n\r\nexport const RightArrow = () => {\r\n    return (\r\n        <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 21 21\"\r\n            width=\"28\"\r\n            height=\"28\"\r\n        >\r\n        <path\r\n            d=\"M9.5 14.5l4-4-4-4\"\r\n            fill=\"none\"\r\n            stroke=\"#FFF\"\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n        />\r\n        </svg>\r\n    );\r\n};","import React from 'react'\r\nimport { LeftArrow, RightArrow } from './ArrowsSvg'\r\n\r\nconst Pagination = ({onLeftClick, onRightClick, page, totalPages}) => {\r\n    return (\r\n        <div className=\"pagination\">\r\n            <button onClick={onLeftClick} className=\"pagination-btn\"><div className=\"icon\"><LeftArrow/></div></button>\r\n            <div>{page} de {totalPages}</div>\r\n            <button onClick={onRightClick} className=\"pagination-btn\"><div className=\"icon\"><RightArrow/></div></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination\r\n","import React, { useContext } from 'react'\r\nimport { FavoriteContext } from '../contexts/favoritesContext';\r\n\r\nconst PokemonCard = ({pokemon}) => {\r\n\r\n    const {favoritePokemons ,updateFavoritePokemons} = useContext(FavoriteContext);\r\n\r\n    const redHeart = '❤️';\r\n    const blackHeart = \"🖤\";\r\n    const heart = favoritePokemons.includes(pokemon.name) ? redHeart : blackHeart;\r\n\r\n    const clickHeart = (e) => {\r\n        e.preventDefault();\r\n        updateFavoritePokemons(pokemon.name);\r\n    }\r\n\r\n    return (\r\n        <div className=\"pokemon-card\">\r\n            <div className=\"pokemon-img-container\">\r\n                <img src={pokemon.sprites.front_default} alt={pokemon.name} className=\"pokemon-img\"/>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <div className=\"card-top\">\r\n                    <h3>{pokemon.name}</h3>\r\n                    <div># {pokemon.id}</div>\r\n                </div>\r\n                <div className=\"card-bottom\">\r\n                    <div className=\"pokemon-type\">\r\n                        {pokemon.types.map((type,index) =>{\r\n                            return (\r\n                                <div key={index} className=\"pokemon-type-text\">{type.type.name}</div>\r\n                            )\r\n                        })}</div>\r\n                    <button onClick={clickHeart} className=\"pokemon-heart-btn\">\r\n                        <div className=\"pokemon-favorite\">{heart}</div>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokemonCard\r\n","import React from 'react'\r\nimport Pagination from './Pagination'\r\nimport PokemonCard from './PokemonCard'\r\n\r\nconst Pokemons = ({pokemons,page,setPage,total,loading}) => {\r\n\r\n    const lastPage = () => {\r\n        const nextPage = Math.max(page - 1,0);\r\n        setPage(nextPage)\r\n    }\r\n\r\n    const nextPage = () => {\r\n        const nextPage = Math.min(page + 1,total);\r\n        setPage(nextPage);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"header\">\r\n                <h1>PokeDex</h1>\r\n                <Pagination\r\n                    page={page + 1}\r\n                    totalPages={total}\r\n                    onLeftClick={lastPage}\r\n                    onRightClick={nextPage}\r\n                />\r\n            </div>\r\n            {loading ? <div className=\"not-found-text\">Cargando Pokemones...</div>\r\n                : \r\n                <div className=\"pokedex-grid\">\r\n                    {pokemons.map((pokemon,index) => {\r\n                        return (\r\n                            <PokemonCard pokemon={pokemon} key={pokemon.name}/>\r\n                        )\r\n                    })}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pokemons\r\n","export const buscarPokemon = async (pokemon) => {\r\n    try {\r\n        let url = `https://pokeapi.co/api/v2/pokemon/${pokemon}`;\r\n        const respuesta = await fetch(url);\r\n        const data = await respuesta.json();\r\n        return data;\r\n    } catch (error) {\r\n        \r\n    }\r\n};\r\n\r\nexport const getPokemon = async (limit = 25,offset=0) => {\r\n    try {\r\n        let url = `https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${offset}`;\r\n            const respuesta = await fetch(url);\r\n            const data = await respuesta.json();\r\n            return data;\r\n    } catch (error) {\r\n        \r\n    }\r\n};\r\n\r\nexport const getPokemonData = async (url) => {\r\n    try {\r\n        \r\n        const respuesta = await fetch(url);\r\n        const data = await respuesta.json();\r\n        return data;\r\n    } catch (error) {\r\n        \r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { buscarPokemon } from '../helpers/api';\r\n\r\nconst SearchBar = ({onSearch}) => {\r\n\r\n    const [search,setSearch] = useState('');\r\n    // const [pokemon, setPokemon] = useState();\r\n\r\n    const handleChange = e => {\r\n        setSearch(e.target.value);\r\n        if(e.target.value.length === 0){\r\n            onSearch(null);\r\n        }\r\n    }\r\n\r\n    const handleClick = async e => {\r\n        onSearch(search);\r\n    }\r\n\r\n    return (\r\n        <div className=\"searchbar-container\">\r\n            <div className=\"searchbar\">\r\n                <input\r\n                placeholder=\"Buscar Pokemon...\"\r\n                onChange={handleChange}/>\r\n            </div>\r\n            <div className=\"searchbar-btn\">\r\n                <button onClick={handleClick}>Buscar</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n","import React, { useState, useEffect } from 'react'\r\nimport NavBar from './components/NavBar';\r\nimport Pokemons from './components/Pokemons';\r\nimport SearchBar from './components/SearchBar';\r\nimport { FavoriteContext } from './contexts/favoritesContext';\r\nimport { buscarPokemon, getPokemon, getPokemonData } from './helpers/api';\r\nimport './style.css';\r\n\r\nconst localStorageKey = \"favorite_pokemon\";\r\n\r\nconst PokeDex = () => {\r\n\r\n    const [pokemons, setPokemons] = useState([]);\r\n    const [page, setPage] = useState(0);\r\n    const [total, setTotal] = useState(0);\r\n    const [loading, setLoading] = useState(true);\r\n    const [favorites, setFavorites] = useState([]);\r\n    const [notFound, setNotFound] = useState(false);\r\n    const [searching, setSearching] = useState(false);\r\n    \r\n    const fetchPokemons = async () =>{\r\n        try {\r\n            setLoading(true);\r\n            const data = await getPokemon(24, 24 * page);\r\n            // console.log(data.results);\r\n            const promises = data.results.map(async (pokemon) => {\r\n                return await getPokemonData(pokemon.url);\r\n            })\r\n            const results = await Promise.all(promises);\r\n            setPokemons(results);\r\n            setLoading(false);\r\n            setTotal(Math.ceil(data.count / 24));\r\n            setNotFound(false);\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n    const loadFavoritePokemons = () => {\r\n        const pokemons = JSON.parse(window.localStorage.getItem(localStorageKey)) || [];\r\n        setFavorites(pokemons);\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadFavoritePokemons();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(!searching){\r\n            fetchPokemons();\r\n        }\r\n    },[page]);\r\n\r\n    const updateFavoritePokemons = (name) => {\r\n        const updated = [...favorites]\r\n        const isFavorite = favorites.indexOf(name);\r\n        if(isFavorite >= 0){\r\n            updated.splice(isFavorite,1);\r\n        }else{\r\n            updated.push(name);\r\n        }\r\n        setFavorites(updated);\r\n        window.localStorage.setItem(localStorageKey,JSON.stringify(updated));\r\n    }\r\n\r\n    const onSearch = async (pokemon) => {\r\n        if(!pokemon){\r\n            return fetchPokemons();\r\n        }\r\n        setLoading(true);\r\n        setNotFound(false);\r\n        setSearching(true);\r\n        const result = await buscarPokemon(pokemon);\r\n        if(!result){\r\n            setNotFound(true);\r\n            setLoading(false);\r\n            return;\r\n        }else{\r\n            setPokemons([result]);\r\n            setPage(0);\r\n            setTotal(1);\r\n        }\r\n        setLoading(false);\r\n        setSearching(false);\r\n    }\r\n    \r\n    return (\r\n        <FavoriteContext.Provider\r\n            value={{favoritePokemons : favorites,\r\n            updateFavoritePokemons: updateFavoritePokemons}}\r\n        >\r\n            <div>\r\n                <NavBar/>\r\n                {/* <hr/> */}\r\n                {/* <br/> */}\r\n                <div className=\"app\">\r\n                    <SearchBar\r\n                        onSearch={onSearch}\r\n                    />\r\n                    {notFound ? \r\n                        <div className=\"not-found-text\">No se encontro el Pokemon</div>\r\n                        :\r\n                        <Pokemons pokemons={pokemons}\r\n                        loading={loading}\r\n                        page={page}\r\n                        setPage={setPage}\r\n                        total={total}/>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </FavoriteContext.Provider>\r\n    )\r\n}\r\n\r\nexport default PokeDex\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PokeDex from './PokeDex';\n\n\n\nReactDOM.render(\n  \n    <PokeDex />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}